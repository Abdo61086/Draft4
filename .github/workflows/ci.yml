name: Draft4 TicTacToe CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    timeout-minutes: 60
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup build environment
      run: |
        # Create artifacts directory that doesn't exist in your repo
        mkdir -p artifacts
        mkdir -p build
        chmod -R 755 . 2>/dev/null || true
      shell: bash
    
    - name: Install Qt and dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y qtbase5-dev qttools5-dev-tools libqt5sql5-sqlite cmake build-essential
        sudo apt-get install -y libgl1-mesa-dev libxkbcommon-x11-0 pkg-config qt5-qmake
        echo "Qt5_DIR=/usr/lib/x86_64-linux-gnu/cmake/Qt5" >> $GITHUB_ENV
    
    - name: Install Qt and dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        python -m pip install --upgrade pip
        pip install aqtinstall
        aqt install-qt windows desktop 5.15.2 win64_msvc2019_64 --outputdir C:\Qt
        echo "Qt5_DIR=C:\Qt\5.15.2\msvc2019_64\lib\cmake\Qt5" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "CMAKE_PREFIX_PATH=C:\Qt\5.15.2\msvc2019_64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    
    - name: Install Qt and dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install --formula cmake
        python3 -m pip install --upgrade pip
        pip3 install aqtinstall
        aqt install-qt mac desktop 5.15.2 clang_64 --outputdir ~/Qt
        echo "Qt5_DIR=$HOME/Qt/5.15.2/clang_64/lib/cmake/Qt5" >> $GITHUB_ENV
        echo "CMAKE_PREFIX_PATH=$HOME/Qt/5.15.2/clang_64" >> $GITHUB_ENV
    
    - name: Setup MSVC (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1
    
    - name: List all files in your repository
      run: |
        echo "=== ALL FILES IN DRAFT4 REPOSITORY ==="
        find . -type f -name "*.cpp" -o -name "*.h" -o -name "*.ui" -o -name "*.db" -o -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" | head -50
      shell: bash
    
    - name: Create CMakeLists.txt for your exact Draft4 structure
      run: |
        cat > CMakeLists.txt << 'EOF'
        cmake_minimum_required(VERSION 3.16)
        project(Draft4TicTacToe VERSION 1.0.0)
        
        set(CMAKE_CXX_STANDARD 17)
        set(CMAKE_CXX_STANDARD_REQUIRED ON)
        
        # Find Qt5
        find_package(Qt5 REQUIRED COMPONENTS Core Widgets Sql)
        
        # Enable MOC, UIC, RCC
        set(CMAKE_AUTOMOC ON)
        set(CMAKE_AUTOUIC ON)
        set(CMAKE_AUTORCC ON)
        
        # All your source files from Draft4 repository (root directory)
        set(SOURCES
            main.cpp
            App.cpp
            choosedifficulty.cpp
            gameChoices.cpp
            gamehistory.cpp
            gamemodewindow.cpp
            gameplaywindow.cpp
            loginpage.cpp
            mainwindow.cpp
            playerselection.cpp
            signupform.cpp
            statisticswindow.cpp
            tictactoewidget.cpp
            userprofile.cpp
        )
        
        set(HEADERS
            App.h
            choosedifficulty.h
            gameChoices.h
            gamehistory.h
            gamemodewindow.h
            gameplaywindow.h
            loginpage.h
            mainwindow.h
            playerselection.h
            signupform.h
            statisticswindow.h
            tictactoewidget.h
            userprofile.h
        )
